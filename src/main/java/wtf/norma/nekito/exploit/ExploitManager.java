package wtf.norma.nekito.exploit;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class ExploitManager {

    private final List<Exploit<?>> exploits = new ArrayList<>();

    public ExploitManager(Exploit<?>... exploits) {
        register(exploits);
    }

    public Optional<Exploit<?>> getExploit(String name) {
        return exploits.stream()
                .filter(exploit -> exploit.getName().equalsIgnoreCase(name))
                .findFirst();
    }

    public Optional<Exploit<?>> getExploit(String name, ExploitType type) {
        return exploits.stream()
                .filter(exploit -> exploit.getName().equalsIgnoreCase(name))
                .filter(exploit -> exploit.getType() == type)
                .findFirst();
    }

    public void register(Exploit<?>... exploits) {
        this.exploits.addAll(Arrays.asList(exploits));
    }

    public void unregister(Exploit<?>... exploits) {
        this.exploits.removeAll(Arrays.asList(exploits));
    }

    public List<Exploit<?>> getExploits() {
        return exploits;
    }
}
